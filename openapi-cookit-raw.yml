openapi: 3.0.0
servers:
    # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/STARCON10_1/ALTA-Cookit-BE/1.0
  - description: Deployed Server
    url: https://cookit.my-extravaganza.site
info:
    version: '1.0'
    title: Cookit App Project
    description: The API for cookit app project
tags:
    - name: Auth
    - name: Users
    - name: Admin

paths:
  /register:
    post:
      tags:
        - Auth
      summary: user registration
      description: features for user registration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username: 
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
            example:
              username: "intanpermana12"
              email: "intanpermana@example.com"
              password: "ip168192"
      responses:
        201:
          description: success insert data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "success create account"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"

  /login:
    post:
      tags:
        - Auth
      summary: login for user
      description: feature for verifying who a user is
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
            example:
              username: "intanpermana12"
              password: "ip168192"
      responses:
        200:
          description: login success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 4
                  username: "intanpermana12"
                  role: "User"
                  token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2NzkxOTM3MjMsInVzZXJJRCI6MX0.c1IV13-55Z6TCsRXuTCbubiwrF8NcbT72hVs-lY5E1s"
                message: "login success"
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "account not registered"
        500:
          $ref: "#/components/responses/500"

  /users:
    get:
      tags:
        - Users
      summary: show user profile
      description: method and endpoint for show user profile
      security:
        - JWTAuth: []
      responses:
        200:
          description: success show user profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 4
                  username: "intanpermana12"
                  bio: "I love cooking"
                  role: "User"
                  profile_picture: "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png"
                  following: 12
                  follower: 5
                message: "success show profile"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "account not registered"
        500:
          $ref: "#/components/responses/500"
    put:
      tags:
        - Users
      summary: edit profile
      description: method and endpoint for update user profile
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                bio:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
            example:
              username: "intanpermana12"
              bio: "I love cooking"
              email: "intanpermana@example.com"
              password: "ip123"
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
            example:
              profile_picture: "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png"
      responses:
        200:
          description: update success
          content:
              application/json:
                  schema:
                      type: object
                  example:
                      message: "success update profile"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "account not registered"
        500:
          $ref: "#/components/responses/500"
    delete:
      tags:
        - Users
      summary: delete data user
      description: method and enpoint delete data from user
      security:
        - JWTAuth: []
      responses:
        200:
          description: success delete user data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "success delete user data"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "account not registered"
        500:
          $ref: "#/components/responses/500"

  /users/search:
    get:
      tags:
        - "Users"
      summary: search user by username
      description: search spesific user by username
      security:
        - JWTAuth: []
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: the numbers of result user
        - in: query
          name: q
          schema:
            type: string
          examples:
            username:
              value: "udin"
          required: true
      responses:
        200:
          description: "search user by username"
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 1
                    profile_picture: "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png"
                    username: "udin adun"
                    bio: "saya cinta makan pedas"
                  - id: 2
                    profile_picture: "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png"
                    username: "kamarudin"
                    bio: "food heal your body"
                message: "success find user"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"

  /users/password:
    put:
      tags:
        - "Users"
      summary: edit users password
      description: endpoint for update user password
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  format: password
                new_password:
                  type: string
                  format: password
                password_confirmation:
                  type: string
                  format: password
            example:
              old_password: "Abdul1234"
              new_password: "Abdul5678"
              password_confirmation: "Abdul5678"
      responses:
        200:
          description: success update password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "success update password"
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        500:
          $ref: "#/components/responses/500"

  /users/{id}:
    get:
      tags:
        - Users
      summary: show another user by user id
      description: show another user by user id
      security:
        - JWTAuth: []
      parameters:
        - name: id
          description: "id"
          in: path
          required: true
          schema:
              description: "id"
              type: integer
              example: 5
      responses:
        200:
          description: succes show profile by user id
          content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/responseObject"
                  example:
                    data:
                      id: 5
                      username: "alfian123"
                      bio: "I love cooking and ate it. LOL"
                      role: "User"
                      profile_picture: "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png"
                    message: "success show profile"
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        500:
          $ref: "#/components/responses/500"

  /users/follower:
    get:
      tags:
        - Users
      summary: get list of user's followers
      description: feature for get list of user's followers
      security:
        - JWTAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: limit data for each page
          schema:
            type: integer
            example: 2
      responses:
        200:
          description: success get list of user's followers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  {
                    followers: 
                      [
                        {
                          id: 1,
                          username: "intanpermana12",
                          user_role: "VerifiedUser",
                          profile_picture: "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png",
                          from_user_id: 14,
                          to_user_id: 2
                        },
                        {
                          id: 2,
                          username: "rebecca027",
                          user_role: "VerifiedUser",
                          profile_picture: "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png",
                          from_user_id: 12,
                          to_user_id: 2
                        },
                        {
                          id: 3,
                          username: "richard49",
                          user_role: "User",
                          profile_picture: "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png",
                          from_user_id: 1,
                          to_user_id: 2
                        },
                      ],
                    total_page: 1,
                  }
                message: "success show all follower users"
        404:
          description: "status not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                data not found:
                  value:
                    message: data not found
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error
              
  /users/following:
    get:
      tags:
        - Users
      summary: get list of following user
      description: feature for get list of following user
      security:
        - JWTAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: limit data for each page
          schema:
            type: integer
            example: 2
      responses:
        200:
          description: success get list of following user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  {
                    following:
                      [
                        {
                          id: 1,
                          username: "intanpermana12",
                          user_role: "VerifiedUser",
                          profile_picture: "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png",
                          from_user_id: 3,
                          to_user_id: 10
                        },
                        {
                          id: 2,
                          username: "rebecca027",
                          user_role: "VerifiedUser",
                          profile_picture: "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png",
                          from_user_id: 3,
                          to_user_id: 4
                        },
                        {
                          id: 3,
                          username: "richard49",
                          user_role: "User",
                          profile_picture: "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png",
                          from_user_id: 3,
                          to_user_id: 13
                        },
                      ],
                    total_page: 1,
                  }
                message: "success show all following users"
        404:
          description: "status not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                data not found:
                  value:
                    message: data not found
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

  /users/upgrade:
    post:
      tags:
        - Users
      summary: "request upgrade account to admin"
      description: "request upgrade verified user to admin"
      security:
        - JWTAuth: []
      responses:
        200:
          description: "success submitted verified user request to admin"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                message: "success send your request to admin"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"

  /users/approval/{id}:
    put:
      tags:
        - Admin
      summary: accept or deny from user request upgrading account
      description: accept or deny from user request upgrading account
      security:
        - JWTAuth: []
      parameters:
        - name: id
          description: "id"
          in: path
          required: true
          schema:
              description: "id"
              type: integer
              example: 5
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
            example:
              status: verify
      responses:
        200:
          description: success approve verified user request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "success approve verified user request"
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        500:
          $ref: "#/components/responses/500"

  /users/listverify:
    get:
      tags:
        - Admin
      summary: get all list users request upgrade
      description: get all list users who want upgrade 
      security:
        - JWTAuth: []
      responses:
        200:
          description: "success show all requested users"
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 1
                    profile_picture: "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png"
                    username: "udin adun"
                    role: "User"
                    approvement: "requested"
                  - id: 2
                    profile_picture: "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png"
                    username: "kamarudin"
                    role: "User"
                    approvement: "requested"
                message: "success show all requested users"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
      

  ####################################
  #  FOLLOWERS
  ####################################
  /users/follow/{id}:
    post:
      tags:
        - Followers
      summary: following an user
      description: feature for following an user
      security:
        - JWTAuth: []
      parameters:
        - name: id
          in: path
          description: follower's id to be follow
          required: true
          schema:
            type: integer
            example: 1
      responses:
        201:
          description: success following an user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "success follow this user"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid User:
                  value:
                    message: invalid user
                Already Following:
                  value:
                    message: you already follow this user
                      
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

  /users/unfollow/{id}:
    delete:
      tags:
        - Followers
      summary: unfollowing an user
      description: feature for unfollowing an user
      security:
        - JWTAuth: []
      parameters:
        - name: id
          in: path
          description: follower's id to be deleted
          required: true
          schema:
            type: integer
            example: 1
      responses:
        201:
          description: success unfollowing an user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "success unfollow this user"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Id param:
                  value:
                    message: invalid id param
                Record Not Found:
                  value:
                    message: record not found
                already unfollow:
                  value:
                    message: please follow this users first to unfollow or user not found
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error
  
  ####################################
  #  RECIPES
  ####################################
  /recipes:             
    get:
        tags:
          - Recipes
        summary: get list of recipes
        description: feature for getting list of recipes
        parameters:
        - name: page
          in: query
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: limit data for each page
          schema:
            type: integer
            example: 2
        - name: id
          in: query
          description: recipe's id to looked for
          schema:
            type: integer
            example: 2
        - name: user_id
          in: query
          description: recipes of user's id to looked for
          schema:
            type: integer
            example: 2
        - name: name
          in: query
          description: recipe's name
          schema:
            type: string
            example: "Soto Rawon"
        - name: type
          in: query
          description: recipe's type
          schema:
            type: string
            enum:
              - Original
              - Mixed
              - Cooked
            example: "Original"
        - name: status
          in: query
          description: recipe's status
          schema:
            type: string
            enum:
              - None
              - OpenForSale
            example: "None"
        responses:
          200:
            description: success get list of recipes
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/responseObject"
                example:
                  data:
                        [
                          {
                            id: 1,
                            username: "Benjamin29",
                            user_role: "VerifiedUser",
                            profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cythe.jpg",
                            name: "Indomie Spesial",
                            description: "Indomie terenak sepanjang masa",
                            type: "Original",
                            status: "None",
                            total_like: 79,
                            total_comment : 117,
                            images:
                              [
                                {
                                  id: 1,
                                  url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial.jpg"
                                }
                              ],
                          },
                          {
                            id: 2,
                            username: "Benjamin30",
                            user_role: "VerifiedUser",
                            profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cythe.jpg",
                            name: "Indomie Soto Spesial",
                            description: "Indomie soto terenak sepanjang masa",
                            type: "Original",
                            status: "OpenForSale",
                            total_like: 79,
                            total_comment : 117,
                            images:
                              [
                                {
                                  id: 2,
                                  url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Soto%20Spesial.jpg"
                                }
                              ],
                          },
                          {
                            id: 3,
                            username: "Biangkerokk77",
                            user_role: "User",
                            profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Musquito.jpg",
                            name: "Indomie Telur Spesial",
                            description: "Indomie telur terenak sepanjang masa",
                            type: "Mixed",
                            status: "None",
                            total_like: 79,
                            total_comment : 117,
                            images:
                              [
                                {
                                  id: 3,
                                  url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial.jpg"
                                }
                              ],
                            replied_recipe:
                              {
                                id: 1,
                                username: "Benjamin29",
                                user_role: "VerifiedUser",
                                profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cythe.jpg",
                                name: "Indomie Spesial",
                                description: "Indomie terenak sepanjang masa",
                                type: "Original",
                                status: "None",
                                total_like: 79,
                                total_comment : 117,
                                images:
                                  [
                                    {
                                      id: 1,
                                      url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial.jpg"
                                    }
                                  ],
                              }
                          },
                          {
                            id: 4,
                            username: "Ronny69",
                            user_role: "User",
                            profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cloud.jpg",
                            name: "Indomie Telur Spesial Ala Ronny",
                            description: "Indomie telur terenak sepanjang masa",
                            type: "Cooked",
                            status: "None",
                            total_like: 79,
                            total_comment : 117,
                            images:
                              [
                                {
                                  id: 3,
                                  url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial%20Ala%20Ronny.jpg"
                                }
                              ],
                            replied_recipe:
                              {
                                id: 1,
                                username: "Benjamin29",
                                user_role: "VerifiedUser",
                                profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cythe.jpg",
                                name: "Indomie Spesial",
                                description: "Indomie terenak sepanjang masa",
                                type: "Original",
                                status: "None",
                                total_like: 79,
                                total_comment : 117,
                                images:
                                  [
                                    {
                                      id: 1,
                                      url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial.jpg"
                                    }
                                  ],
                              }
                          },
                        ]
                  message: "succesfully read list of recipes"
          400:
            description: "bad request"
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                examples:
                  Invalid page param:
                    value:
                      message: invalid page param
                  Invalid limit param:
                    value:
                      message: invalid limit param
          500:
            description: "internal server error"
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                example:
                  message: internal server error

    post:
      tags:
        - Recipes
      summary: insert new user's recipe
      description: feature for insert new user's recipe
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                recipe_id:
                  description: "Replied recipe's id"
                  type: integer
                name:
                  type: string
                description:
                  type: string
                type:
                  description: "By default 'Original'"
                  type: string
                  enum:
                    - "Original"
                    - "Mixed"
                    - "Cooked"
                image:
                  type: object
                steps:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                ingredients:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      price:
                        type: integer
                      ingredient_details:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            quantity:
                              type: integer
                            unit:
                              type: string
            examples:
              original:
                value:
                  data:
                    {
                      name: "Indomie Spesial",
                      description: "Indomie terenak sepanjang masa",
                      type: "Original",
                      image: "",
                      steps:
                        [
                          {
                            name: "Rebus air sebanyak 300ml dengan api sedang hingga mendidih"
                          },
                          {
                            name: "Sembari menunggu air yang mendidih, siapkan piring dan tuangkan bumbu ke piring tersebut"
                          },
                          {
                            name: "Setelah air mendidih, masukan mie"
                          },
                          {
                            name: "Setelah matang, tuangkan mie ke dalam mangkuk yang telah diisi bumbu"
                          },
                          {
                            name: "Indomie siap disajikan"
                          },
                        ],
                      ingredients:
                      [
                        {
                          name: Original,
                          price: 5000,
                          ingredient_details:
                            [
                              {
                                name: "Bumbu Indomie (Original)",
                                quantity: 1,
                                uint: "pcs",
                              },
                              {
                                name: "Minyak Indomie (Original)",
                                quantity: 1,
                                uint: "pcs",
                              },
                            ]
                        }
                      ]
                    }
              mixed:
                value:
                  data:
                    {
                      name: "Indomie Telur Spesial",
                      description: "Indomie telur terenak sepanjang masa",
                      type: "Mixed",
                      recipe_id: 1,
                      image: "",
                      steps:
                        [
                          {
                            name: "Rebus air sebanyak 300ml dengan api sedang hingga mendidih"
                          },
                          {
                            name: "Sembari menunggu air yang mendidih, siapkan piring dan tuangkan bumbu ke piring tersebut"
                          },
                          {
                            name: "Setelah air mendidih, masukan mie"
                          },
                          {
                            name: "Setelah matang, tuangkan mie ke dalam mangkuk yang telah diisi bumbu"
                          },
                          {
                            name: "Indomie siap disajikan"
                          },
                        ],
                      ingredients:
                        [
                          {
                            name: Original,
                            price: 11000,
                            ingredient_details:
                              [
                                {
                                  name: "Bumbu Indomie (Original)",
                                  quantity: 1,
                                  uint: "pcs",
                                },
                                {
                                  name: "Minyak Indomie (Original)",
                                  quantity: 1,
                                  uint: "pcs",
                                },
                                {
                                  name: "Telur",
                                  quantity: 1,
                                  uint: "pcs",
                                },
                              ],
                          }
                        ],
                    }
              cooked:
                value:
                  data:
                    {
                      name: "Indomie Telur Spesial Ala Ronny",
                      description: "Indomie telur terenak sepanjang masa",
                      type: "Cooked",
                      recipe_id: 1,
                      image: "",
                    }
      responses:
        201:
          description: success insert user's recipe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              examples:
                original:
                  value:
                    data:
                      {
                        id: 1,
                        username: "Benjamin29",
                        user_role: "VerifiedUser",
                        profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cythe.jpg",
                        name: "Indomie Spesial",
                        description: "Indomie terenak sepanjang masa",
                        images:
                          [
                            {
                              id: 1,
                              url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial.jpg"
                            }
                          ],
                        steps:
                          [
                            {
                              id: 1,
                              name: "Rebus air sebanyak 300ml dengan api sedang hingga mendidih"
                            },
                            {
                              id: 2,
                              name: "Sembari menunggu air yang mendidih, siapkan piring dan tuangkan bumbu ke piring tersebut"
                            },
                            {
                              id: 3,
                              name: "Setelah air mendidih, masukan mie"
                            },
                            {
                              id: 4,
                              name: "Setelah matang, tuangkan mie ke dalam mangkuk yang telah diisi bumbu"
                            },
                            {
                              id: 5,
                              name: "Indomie siap disajikan"
                            },
                          ],
                        ingredients:
                        [
                          {
                            id: 1,
                            name: Original,
                            price: 5000,
                            ingredient_details:
                              [
                                {
                                  id: 1,
                                  name: "Bumbu Indomie (Original)",
                                  quantity: 1,
                                  uint: "pcs",
                                },
                                {
                                  id: 2,
                                  name: "Minyak Indomie (Original)",
                                  quantity: 1,
                                  uint: "pcs",
                                },
                              ]
                          }
                        ]
                      }
                    message: "successfully insert user's recipe"
                mixed:
                  value:
                    data:
                      {
                        id: 2,
                        user_id: 2,
                        username: "Joko69",
                        user_role: "User",
                        profile_picture: "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png",
                        recipe_id: 1,
                        replied_recipe: {
                          id: 1,
                          user_id: 1,
                          username: "Jordy77",
                          user_role: "User",
                          type: "Original",
                          status: "None",
                          name: "Indomie Spesial",
                          description: "Indomie terenak sepanjang masa",
                          total_like: 0,
                          total_comment: 0,
                          steps: [
                            {
                              id: 1,
                              name": "Rebus air sebanyak 300ml dengan api sedang hingga mendidih"
                            },
                            {
                              id: 2,
                              name: "Sembari menunggu air yang mendidih, siapkan piring dan tuangkan bumbu ke piring tersebut"
                            },
                            {
                              id: 3,
                              name: "Setelah air mendidih, masukan mie"
                            },
                            {
                              id: 4,
                              name: "Setelah matang, tuangkan mie ke dalam mangkuk yang telah diisi bumbu"
                            },
                            {
                              id: 5,
                              name: "Indomie siap disajikan"
                            }
                          ],
                          ingredients: [
                            {
                              id: 1,
                              name: "Original",
                              price: 5000,
                              ingredient_details: [
                                {
                                  id: 1,
                                  name: "Bumbu Indomie (Original)",
                                  quantity: 1
                                },
                                {
                                  id: 2,
                                  name: "Minyak Indomie (Original)",
                                  quantity: 1
                                }
                              ]
                            }
                          ]
                        },
                        type: "Mixed",
                        status: "None",
                        name: "Indomie Spesial",
                        description: "Indomie terenak sepanjang masa",
                        total_like: 0,
                        total_comment: 0,
                        steps: [
                          {
                            id: 21,
                            name: "Rebus air sebanyak 300ml dengan api sedang hingga mendidih"
                          },
                          {
                            id: 22,
                            name: "Sembari menunggu air yang mendidih, siapkan piring dan tuangkan bumbu ke piring tersebut"
                          },
                          {
                            id: 23,
                            name: "Setelah air mendidih, masukan mie"
                          },
                          {
                            id: 24,
                            name: "Setelah matang, tuangkan mie ke dalam mangkuk yang telah diisi bumbu"
                          },
                          {
                            id: 25,
                            name: "Indomie siap disajikan"
                          }
                        ],
                        ingredients: [
                          {
                            id: 5,
                            name: "Original",
                            price: 5000,
                            ingredient_details: [
                              {
                                id: 9,
                                name: "Bumbu Indomie (Original)",
                                quantity: 1
                              },
                              {
                                id: 10,
                                name: "Minyak Indomie (Original)",
                                quantity: 1
                              }
                            ]
                          }
                        ]
                      }
                    message: "successfully insert user's recipe"
                cooked:
                  value:
                    data:
                      {
                        id: 3,
                        username: "Ronny69",
                        user_role: "VerifiedUser",
                        profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cloud.jpg",
                        name: "Indomie Telur Spesial Ala Ronny",
                        description: "Indomie telur terenak sepanjang masa",
                        images:
                          [
                            {
                              id: 3,
                              url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial%20Ala%20Ronny.jpg"
                            }
                          ],
                        replied_recipe: {
                          id: 1,
                          user_id: 1,
                          username: "Jordy77",
                          user_role: "User",
                          type: "Original",
                          status: "None",
                          name: "Indomie Spesial",
                          description: "Indomie terenak sepanjang masa",
                          total_like: 0,
                          total_comment: 0,
                          steps: [
                            {
                              id: 1,
                              name": "Rebus air sebanyak 300ml dengan api sedang hingga mendidih"
                            },
                            {
                              id: 2,
                              name: "Sembari menunggu air yang mendidih, siapkan piring dan tuangkan bumbu ke piring tersebut"
                            },
                            {
                              id: 3,
                              name: "Setelah air mendidih, masukan mie"
                            },
                            {
                              id: 4,
                              name: "Setelah matang, tuangkan mie ke dalam mangkuk yang telah diisi bumbu"
                            },
                            {
                              id: 5,
                              name: "Indomie siap disajikan"
                            }
                          ],
                          ingredients: [
                            {
                              id: 1,
                              name: "Original",
                              price: 5000,
                              ingredient_details: [
                                {
                                  id: 1,
                                  name: "Bumbu Indomie (Original)",
                                  quantity: 1
                                },
                                {
                                  id: 2,
                                  name: "Minyak Indomie (Original)",
                                  quantity: 1
                                }
                              ]
                            }
                          ]
                        },
                        steps: [],
                        ingredients: [],
                      }
                    message: "succesfully insert user's recipe"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Ingredient:
                  value:
                    message: invalid ingredient
                Forbidden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

  /recipes/{recipe_id}:
    put:
      tags:
        - Recipes
      summary: update user's recipe
      description: feature for updating user's recipe
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                status:
                  type: string
                  enum:
                    - None
                    - OpenForSale
                description:
                  type: string
            examples:
              Not For Sale:
                value:
                  name: "Indomie Telur Spesial"
                  description: "Indomie telur terenak sepanjang masa"
              Open For Sale:
                value:
                  name: "Indomie Telur Spesial"
                  status: "OpenForSale"
                  description: "Indomie telur terenak sepanjang masa"
      parameters:
        - name: recipe_id
          in: path
          description: recipe's id to be updated
          required: true
          schema:
            type: integer
            example: 1
      responses:
        201:
          description: success updating user's recipe
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "succesfully update user's recipe"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Id param:
                  value:
                    message: invalid id param
                Record Not Found:
                  value:
                    message: record not found
                Foridden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

    delete:
      tags:
        - Recipes
      summary: delete user's recipe
      description: feature for deleting user's recipe
      security:
        - JWTAuth: []
      parameters:
        - name: recipe_id
          in: path
          description: recipe's id to be deleted
          required: true
          schema:
            type: integer
            example: 1
      responses:
        201:
          description: success deleting user's recipe
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "succesfully delete user's recipe"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Id param:
                  value:
                    message: invalid id param
                Record Not Found:
                  value:
                    message: record not found
                Foridden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error
                      
  /users/recipes/timeline:
    get:
        tags:
          - Recipes
        summary: get timeline of recipes
        description: feature for getting timeline of recipes
        security:
        - JWTAuth: []
        parameters:
        - name: page
          in: query
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: limit data for each page
          schema:
            type: integer
            example: 2
        responses:
          200:
            description: success get timeline of recipes
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/responseObject"
                example:
                  data:
                        [
                          {
                            id: 1,
                            username: "Benjamin29",
                            user_role: "VerifiedUser",
                            profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cythe.jpg",
                            name: "Indomie Spesial",
                            description: "Indomie terenak sepanjang masa",
                            type: "Original",
                            status: "None",
                            total_like: 79,
                            total_comment : 117,
                            images:
                              [
                                {
                                  id: 1,
                                  url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial.jpg"
                                }
                              ],
                          },
                          {
                            id: 2,
                            username: "Benjamin30",
                            user_role: "VerifiedUser",
                            profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cythe.jpg",
                            name: "Indomie Soto Spesial",
                            description: "Indomie soto terenak sepanjang masa",
                            type: "Original",
                            status: "OpenForSale",
                            total_like: 79,
                            total_comment : 117,
                            images:
                              [
                                {
                                  id: 2,
                                  url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Soto%20Spesial.jpg"
                                }
                              ],
                          },
                          {
                            id: 3,
                            username: "Biangkerokk77",
                            user_role: "User",
                            profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Musquito.jpg",
                            name: "Indomie Telur Spesial",
                            description: "Indomie telur terenak sepanjang masa",
                            type: "Mixed",
                            status: "None",
                            total_like: 79,
                            total_comment : 117,
                            images:
                              [
                                {
                                  id: 3,
                                  url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial.jpg"
                                }
                              ],
                            replied_recipe:
                              {
                                id: 1,
                                username: "Benjamin29",
                                user_role: "VerifiedUser",
                                profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cythe.jpg",
                                name: "Indomie Spesial",
                                description: "Indomie terenak sepanjang masa",
                                type: "Original",
                                status: "None",
                                total_like: 79,
                                total_comment : 117,
                                images:
                                  [
                                    {
                                      id: 1,
                                      url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial.jpg"
                                    }
                                  ],
                              }
                          },
                          {
                            id: 4,
                            username: "Ronny69",
                            user_role: "User",
                            profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cloud.jpg",
                            name: "Indomie Telur Spesial Ala Ronny",
                            description: "Indomie telur terenak sepanjang masa",
                            type: "Cooked",
                            status: "None",
                            total_like: 79,
                            total_comment : 117,
                            images:
                              [
                                {
                                  id: 3,
                                  url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial%20Ala%20Ronny.jpg"
                                }
                              ],
                            replied_recipe:
                              {
                                id: 1,
                                username: "Benjamin29",
                                user_role: "VerifiedUser",
                                profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cythe.jpg",
                                name: "Indomie Spesial",
                                description: "Indomie terenak sepanjang masa",
                                type: "Original",
                                status: "None",
                                total_like: 79,
                                total_comment : 117,
                                images:
                                  [
                                    {
                                      id: 1,
                                      url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial.jpg"
                                    }
                                  ],
                              }
                          },
                        ]
                  message: "succesfully read list of recipes"
          400:
            description: "bad request"
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                examples:
                  Invalid page param:
                    value:
                      message: invalid page param
                  Invalid limit param:
                    value:
                      message: invalid limit param
          500:
            description: "internal server error"
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                example:
                  message: internal server error

  /recipes/trending:
    get:
        tags:
          - Recipes
        summary: get list of trending recipes
        description: feature for getting list of trending recipes
        security:
        - JWTAuth: []
        parameters:
        - name: page
          in: query
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: limit data for each page
          schema:
            type: integer
            example: 2
        responses:
          200:
            description: success get list of trending recipes
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/responseObject"
                example:
                  data:
                        [
                          {
                            id: 1,
                            username: "Benjamin29",
                            user_role: "VerifiedUser",
                            profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cythe.jpg",
                            name: "Indomie Spesial",
                            description: "Indomie terenak sepanjang masa",
                            type: "Original",
                            status: "None",
                            total_like: 79,
                            total_comment : 117,
                            images:
                              [
                                {
                                  id: 1,
                                  url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial.jpg"
                                }
                              ],
                          },
                          {
                            id: 2,
                            username: "Benjamin30",
                            user_role: "VerifiedUser",
                            profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cythe.jpg",
                            name: "Indomie Soto Spesial",
                            description: "Indomie soto terenak sepanjang masa",
                            type: "Original",
                            status: "OpenForSale",
                            total_like: 79,
                            total_comment : 117,
                            images:
                              [
                                {
                                  id: 2,
                                  url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Soto%20Spesial.jpg"
                                }
                              ],
                          },
                          {
                            id: 3,
                            username: "Biangkerokk77",
                            user_role: "User",
                            profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Musquito.jpg",
                            name: "Indomie Telur Spesial",
                            description: "Indomie telur terenak sepanjang masa",
                            type: "Mixed",
                            status: "None",
                            total_like: 79,
                            total_comment : 117,
                            images:
                              [
                                {
                                  id: 3,
                                  url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial.jpg"
                                }
                              ],
                            replied_recipe:
                              {
                                id: 1,
                                username: "Benjamin29",
                                user_role: "VerifiedUser",
                                profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cythe.jpg",
                                name: "Indomie Spesial",
                                description: "Indomie terenak sepanjang masa",
                                type: "Original",
                                status: "None",
                                total_like: 79,
                                total_comment : 117,
                                images:
                                  [
                                    {
                                      id: 1,
                                      url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial.jpg"
                                    }
                                  ],
                              }
                          },
                          {
                            id: 4,
                            username: "Ronny69",
                            user_role: "User",
                            profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cloud.jpg",
                            name: "Indomie Telur Spesial Ala Ronny",
                            description: "Indomie telur terenak sepanjang masa",
                            type: "Cooked",
                            status: "None",
                            total_like: 79,
                            total_comment : 117,
                            images:
                              [
                                {
                                  id: 3,
                                  url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial%20Ala%20Ronny.jpg"
                                }
                              ],
                            replied_recipe:
                              {
                                id: 1,
                                username: "Benjamin29",
                                user_role: "VerifiedUser",
                                profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cythe.jpg",
                                name: "Indomie Spesial",
                                description: "Indomie terenak sepanjang masa",
                                type: "Original",
                                status: "None",
                                total_like: 79,
                                total_comment : 117,
                                images:
                                  [
                                    {
                                      id: 1,
                                      url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial.jpg"
                                    }
                                  ],
                              }
                          },
                        ]
                  message: "succesfully read list of recipes"
          400:
            description: "bad request"
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                examples:
                  Invalid page param:
                    value:
                      message: invalid page param
                  Invalid limit param:
                    value:
                      message: invalid limit param
          500:
            description: "internal server error"
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                example:
                  message: internal server error

  /recipes/{recipe_id}/detail:
    get:
      tags:
        - Recipes
      summary: get details of recipes
      description: feature for getting details of recipes
      parameters:
        - name: recipe_id
          in: path
          description: recipe's id to be updated
          required: true
          schema:
            type: integer
            example: 1
      responses:
        200:
          description: success get details of recipes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              examples:
                original:
                  value:
                    data:
                      {
                        id: 1,
                        username: "Benjamin29",
                        user_role: "VerifiedUser",
                        profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cythe.jpg",
                        name: "Indomie Spesial",
                        description: "Indomie terenak sepanjang masa",
                        status: "None",
                        total_like: 79,
                        total_comment : 117,
                        images:
                          [
                            {
                              id: 1,
                              url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial.jpg"
                            }
                          ],
                        steps:
                          [
                            {
                              id: 1,
                              name: "Rebus air sebanyak 300ml dengan api sedang hingga mendidih"
                            },
                            {
                              id: 2,
                              name: "Sembari menunggu air yang mendidih, siapkan piring dan tuangkan bumbu ke piring tersebut"
                            },
                            {
                              id: 3,
                              name: "Setelah air mendidih, masukan mie"
                            },
                            {
                              id: 4,
                              name: "Setelah matang, tuangkan mie ke dalam mangkuk yang telah diisi bumbu"
                            },
                            {
                              id: 5,
                              name: "Indomie siap disajikan"
                            },
                          ],
                        ingredients:
                        [
                          {
                            id: 1,
                            name: Original,
                            price: 5000,
                            ingredient_details:
                              [
                                {
                                  id: 1,
                                  name: "Bumbu Indomie (Original)",
                                  quantity: 1,
                                  uint: "pcs",
                                },
                                {
                                  id: 2,
                                  name: "Minyak Indomie (Original)",
                                  quantity: 1,
                                  uint: "pcs",
                                },
                              ]
                          }
                        ]
                      }
                    message: "successfully read details of recipe"
                mixed:
                  value:
                    data:
                      {
                        id: 3,
                        username: "Biangkerokk77",
                        user_role: "VerifiedUser",
                        profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Musquito.jpg",
                        name: "Indomie Telur Spesial",
                        description: "Indomie telur terenak sepanjang masa",
                        images:
                          [
                            {
                              id: 3,
                              url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial.jpg"
                            }
                          ],
                        steps:
                          [
                            {
                              id: 11,
                              name: "Rebus air sebanyak 300ml dengan api sedang hingga mendidih"
                            },
                            {
                              id: 12,
                              name: "Sembari menunggu air yang mendidih, siapkan piring dan tuangkan bumbu ke piring tersebut"
                            },
                            {
                              id: 13,
                              name: "Setelah air mendidih, masukan mie"
                            },
                            {
                              id: 14,
                              name: "Setelah matang, tuangkan mie ke dalam mangkuk yang telah diisi bumbu"
                            },
                            {
                              id: 15,
                              name: "Indomie siap disajikan"
                            },
                          ],
                        ingredients:
                          [
                            {
                              id: 3,
                              name: Original,
                              price: 11000,
                              ingredient_details:
                                [
                                  {
                                    id: 5,
                                    name: "Bumbu Indomie (Original)",
                                    quantity: 1,
                                    uint: "pcs",
                                  },
                                  {
                                    id: 6,
                                    name: "Minyak Indomie (Original)",
                                    quantity: 1,
                                    uint: "pcs",
                                  },
                                  {
                                    id: 7,
                                    name: "Telur",
                                    quantity: 1,
                                    uint: "pcs",
                                  },
                                ],
                            }
                          ],
                        replied_recipe:
                          {
                            id: 1,
                            username: "Benjamin29",
                            user_role: "VerifiedUser",
                            profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cythe.jpg",
                            name: "Indomie Spesial",
                            description: "Indomie terenak sepanjang masa",
                            images:
                              [
                                {
                                  id: 1,
                                  url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial.jpg"
                                }
                              ],
                            steps:
                              [
                                {
                                  id: 1,
                                  name: "Rebus air sebanyak 300ml dengan api sedang hingga mendidih"
                                },
                                {
                                  id: 2,
                                  name: "Sembari menunggu air yang mendidih, siapkan piring dan tuangkan bumbu ke piring tersebut"
                                },
                                {
                                  id: 3,
                                  name: "Setelah air mendidih, masukan mie"
                                },
                                {
                                  id: 4,
                                  name: "Setelah matang, tuangkan mie ke dalam mangkuk yang telah diisi bumbu"
                                },
                                {
                                  id: 5,
                                  name: "Indomie siap disajikan"
                                },
                              ],
                            ingredients:
                              [
                                {
                                  id: 1,
                                  name: Original,
                                  price: 5000,
                                  ingredient_details:
                                    [
                                      {
                                        id: 1,
                                        name: "Bumbu Indomie (Original)",
                                        quantity: 1,
                                        uint: "pcs",
                                      },
                                      {
                                        id: 2,
                                        name: "Minyak Indomie (Original)",
                                        quantity: 1,
                                        uint: "pcs",
                                      },
                                    ],
                                }
                              ],
                          }
                      }
                    message: "successfully get details of recipe"
                cooked:
                  value:
                    data:
                      {
                        id: 3,
                        username: "Ronny69",
                        user_role: "VerifiedUser",
                        profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cloud.jpg",
                        name: "Indomie Telur Spesial Ala Ronny",
                        description: "Indomie telur terenak sepanjang masa",
                        images:
                          [
                            {
                              id: 3,
                              url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial%20Ala%20Ronny.jpg"
                            }
                          ],
                        steps: [],
                        ingredients: [],
                        replied_recipe:
                          {
                            id: 1,
                            username: "Benjamin29",
                            profile_picture: "https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cythe.jpg",
                            name: "Indomie Spesial",
                            description: "Indomie terenak sepanjang masa",
                            images:
                              [
                                {
                                  id: 1,
                                  url_image: "https://storage.googleapis.com/alta-cookit/static/images/Indomie%20Spesial.jpg"
                                }
                              ],
                            steps:
                              [
                                {
                                  id: 1,
                                  name: "Rebus air sebanyak 300ml dengan api sedang hingga mendidih"
                                },
                                {
                                  id: 2,
                                  name: "Sembari menunggu air yang mendidih, siapkan piring dan tuangkan bumbu ke piring tersebut"
                                },
                                {
                                  id: 3,
                                  name: "Setelah air mendidih, masukan mie"
                                },
                                {
                                  id: 4,
                                  name: "Setelah matang, tuangkan mie ke dalam mangkuk yang telah diisi bumbu"
                                },
                                {
                                  id: 5,
                                  name: "Indomie siap disajikan"
                                },
                              ],
                            ingredients:
                              [
                                {
                                  id: 1,
                                  name: Original,
                                  price: 5000,
                                  ingredient_details:
                                    [
                                      {
                                        id: 1,
                                        name: "Bumbu Indomie (Original)",
                                        quantity: 1,
                                        uint: "pcs",
                                      },
                                      {
                                        id: 2,
                                        name: "Minyak Indomie (Original)",
                                        quantity: 1,
                                        uint: "pcs",
                                      },
                                    ],
                                }
                              ],
                          }
                      }
                    message: "succesfully read details of recipe"
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

  /recipes/{recipe_id}/like:
    post:
      tags:
        - Recipes
      summary: like user's recipe
      description: feature for liking user's recipe
      security:
        - JWTAuth: []
      parameters:
        - name: recipe_id
          in: path
          description: recipe's id to be liked for
          required: true
          schema:
            type: integer
            example: 1
      responses:
        201:
          description: success like user's recipe
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "succesfully like user's recipe"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Recipe:
                  value:
                    message: invalid recipe
                Already Liked:
                  value:
                    message: already liked
                Forbidden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

  /recipes/{recipe_id}/unlike:
    delete:
      tags:
        - Recipes
      summary: unlike user's recipe
      description: feature for unlike user's recipe
      security:
        - JWTAuth: []
      parameters:
        - name: recipe_id
          in: path
          description: recipe's id to be unlike for
          required: true
          schema:
            type: integer
            example: 1
      responses:
        201:
          description: success unlike user's recipe
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "succesfully unlike user's recipe"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Id param:
                  value:
                    message: invalid id param
                Record Not Found:
                  value:
                    message: record not found
                Foridden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error
  
  ####################################
  #  IMAGES
  ####################################
  /recipes/{recipe_id}/images:
    post:
      tags:
        - Images
      summary: insert new recipe's image
      description: feature for insert new recipe's image
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - image
              properties:
                image:
                  type: object
            example:
              image: ""
      parameters:
        - name: recipe_id
          in: path
          description: image of recipe's id to be inserted
          required: true
          schema:
            type: integer
            example: 1
      responses:
        201:
          description: success insert recipe's image
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  url_image: "https://storage.googleapis.com/alta-cookit/static/images/rawon.jpg"
                message: "succesfully insert recipe's image"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Input:
                  value:
                    message: invalid input
                Invalid Recipe:
                  value:
                    message: invalid recipe
                Forbidden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

  /recipes/{recipe_id}/images/{image_id}:
    put:
      tags:
        - Images
      summary: update recipe's image
      description: feature for updating recipe's image
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - image
              properties:
                image:
                  type: object
            example:
              image: ""
      parameters:
        - name: recipe_id
          in: path
          description: image of recipe's id to be updated
          required: true
          schema:
            type: integer
            example: 1
        - name: image_id
          in: path
          description: image's id to be updated
          required: true
          schema:
            type: integer
            example: 1
      responses:
        201:
          description: success updating recipe's image
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  url_image: "https://storage.googleapis.com/alta-cookit/static/images/Soto%20rawon.jpg"
                message: "succesfully update recipe's image"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Input:
                  value:
                    message: invalid input
                Record Not Found:
                  value:
                    message: record not found
                Foridden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

    delete:
      tags:
        - Images
      summary: delete recipe's image
      description: feature for deleting recipe's image
      security:
        - JWTAuth: []
      parameters:
        - name: recipe_id
          in: path
          description: image of recipe's id to be deleted
          required: true
          schema:
            type: integer
            example: 1
        - name: image_id
          in: path
          description: image's id to be deleted
          required: true
          schema:
            type: integer
            example: 1
      responses:
        201:
          description: success deleting recipe's image
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "succesfully delete recipe's image"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Record Not Found:
                  value:
                    message: record not found
                Foridden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

  ####################################
  #  COMMENTS
  ####################################
  /recipes/{recipe_id}/comments:
    get:
      tags:
        - Comments
      summary: get list of recipe's comment
      description: feature for getting list of recipe's comment
      parameters:
        - name: recipe_id
          in: path
          description: comments of recipe's id to looked for
          required: true
          schema:
            type: integer
            example: 1
        - name: page
          in: query
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: limit data for each page
          schema:
            type: integer
            example: 2
      responses:
        200:
          description: success get list of recipe's comment
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    data:
                      type: object
                    message:
                      type: string
              example:
                data:
                  {
                    comments:
                      [
                        {
                          id: 1,
                          username: "Hijack099",
                          user_role: "VerifiedUser",
                          profile_picture: https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cyber.jpg,
                          comment: "Emang mantep si ini resepnya",
                          comment_image:  https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cyber.jpg,
                        },
                        {
                          id: 2,
                          username: "Beluga077",
                          user_role: "VerifiedUser",
                          profile_picture: https://storage.googleapis.com/alta-cookit/static/images/Green%20Tea.jpg,
                          comment: "The best resepnya",
                          comment_image:  "",
                        },
                        {
                          id: 3,
                          username: "Norrikembung057",
                          user_role: "User",
                          profile_picture: https://storage.googleapis.com/alta-cookit/static/images/Dark%20Saber.jpg,
                          comment: "Enak, tapi agak kurang kalo di saya. Beda selera mungkin",
                          comment_image:  "",
                        },
                      ],
                    total_page: 1,
                  }
                message: "succesfully read list of recipe's comments"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid page param:
                  value:
                    message: invalid page param
                Invalid limit param:
                  value:
                    message: invalid limit param
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

    post:
      tags:
        - Comments
      summary: insert new recipe's comment
      description: feature for insert new recipe's comment
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - comment
              properties:
                comment:
                  type: string
                image:
                  type: object
            example:
              comment: "Udah di coba, dan ternyata emang se enak itu racikannya"
      parameters:
        - name: recipe_id
          in: path
          description: comments of recipe's id to be inserted
          required: true
          schema:
            type: integer
            example: 1
      responses:
        201:
          description: success insert recipe's comment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  comment_image: https://storage.googleapis.com/alta-cookit/static/images/Dark%20Cyber.jpg,
                  comment: "Udah di coba, dan ternyata emang se enak itu racikannya"
                message: "succesfully insert recipe's comment"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Input:
                  value:
                    message: invalid input
                Invalid Recipe:
                  value:
                    message: invalid recipe
                Forbidden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

  /recipes/{recipe_id}/comments/{comment_id}:
    put:
      tags:
        - Comments
      summary: update recipe's comment
      description: feature for updating recipe's comment
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - comment
              properties:
                comment:
                  type: string
                image:
                  type: object
            example:
              name: "Setelah nyobain bereksperimen di resep ini, ternyata bagian krusial nya ada pas mixing bahan nya"
      parameters:
        - name: recipe_id
          in: path
          description: comments of recipe's id to be updated
          required: true
          schema:
            type: integer
            example: 1
        - name: comment_id
          in: path
          description: comment's id to be updated
          required: true
          schema:
            type: integer
            example: 1
      responses:
        201:
          description: success updating recipe's comment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "succesfully update recipe's comment"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Id param:
                  value:
                    message: invalid id param
                Invalid Input:
                  value:
                    message: invalid input
                Record Not Found:
                  value:
                    message: record not found
                Foridden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

    delete:
      tags:
        - Comments
      summary: delete recipe's comment
      description: feature for deleting recipe's comment
      security:
        - JWTAuth: []
      parameters:
        - name: recipe_id
          in: path
          description: comments of recipe's id to be deleted
          required: true
          schema:
            type: integer
            example: 1
        - name: comment_id
          in: path
          description: comment's id to be deleted
          required: true
          schema:
            type: integer
            example: 1
      responses:
        201:
          description: success deleting recipe's comment
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "succesfully delete recipe's comment"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Id param:
                  value:
                    message: invalid id param
                Record Not Found:
                  value:
                    message: record not found
                Foridden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

  ####################################
  #  STEPS
  ####################################
  /recipes/{recipe_id}/steps:
    post:
      tags:
        - Steps
      summary: insert new recipe's step
      description: feature for insert new recipe's step
      security:
        - JWTAuth: []
      parameters:
        - name: recipe_id
          in: path
          description: steps of recipe's id to be inserted
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
            example:
              name: Siapkan alat dan bahan
      responses:
        201:
          description: success insert recipe's step
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  name: "Siapkan alat dan bahan"
                message: "succesfully insert recipe's step"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Input:
                  value:
                    message: invalid input
                Invalid Recipe:
                  value:
                    message: invalid recipe
                Forbidden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

  /recipes/{recipe_id}/steps/{step_id}:
    put:
      tags:
        - Steps
      summary: update recipe's step
      description: feature for updating recipe's step
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
            example:
              name: Siapkan alat dan bahan
      parameters:
        - name: recipe_id
          in: path
          description: steps of recipe's id to be updated
          required: true
          schema:
            type: integer
            example: 1
        - name: step_id
          in: path
          description: step's id to be updated
          required: true
          schema:
            type: integer
            example: 1
      responses:
        201:
          description: success updating recipe's step
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "succesfully update recipe's step"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Id param:
                  value:
                    message: invalid id param
                Invalid Input:
                  value:
                    message: invalid input
                Record Not Found:
                  value:
                    message: record not found
                Foridden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

    delete:
      tags:
        - Steps
      summary: delete recipe's step
      description: feature for deleting recipe's step
      security:
        - JWTAuth: []
      parameters:
        - name: recipe_id
          in: path
          description: steps of recipe's id to be deleted
          required: true
          schema:
            type: integer
            example: 1
        - name: step_id
          in: path
          description: step's id to be deleted
          required: true
          schema:
            type: integer
            example: 1
      responses:
        201:
          description: success deleting recipe's step
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "succesfully delete recipe's step"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Id param:
                  value:
                    message: invalid id param
                Record Not Found:
                  value:
                    message: record not found
                Foridden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

  ####################################
  #  INGREDIENTS
  ####################################
  /recipes/{recipe_id}/ingredients:
    post:
      tags:
        - Ingredients
      summary: insert new recipe's ingredient
      description: feature for insert new recipe's ingredient
      security:
        - JWTAuth: []
      parameters:
        - name: recipe_id
          in: path
          description: ingredient of recipe's id to be inserted
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - price
              properties:
                name:
                  type: string
                price:
                  type: integer
            example:
              name: "Paket Couple"
              price: 125000

      responses:
        201:
          description: success insert recipe's ingredient
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  name: "Paket Couple"
                  price: 125000
                message: "succesfully insert recipe's ingredient"
        400:
          description: "bad request"
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                examples:
                  Invalid Input:
                    value:
                      message: invalid input
                  Invalid Recipe:
                    value:
                      message: invalid recipe
                  Forbidden Request:
                    value:
                      message: forbidden request
        500:
          description: "internal server error"
          content:
              application/json:
                  schema:
                    type: object
                    properties:
                      message:
                        type: string
                  example:
                      message: internal server error

  /recipes/{recipe_id}/ingredients/{ingredient_id}:
    put:
      tags:
        - Ingredients
      summary: update recipe's ingredient
      description: feature for updating recipe's ingredient
      security:
        - JWTAuth: []
      parameters:
        - name: recipe_id
          in: path
          description: ingredient of recipe's id to be updated
          required: true
          schema:
            type: integer
            example: 1
        - name: ingredient_id
          in: path
          description: ingredient's id to be updated
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - price
              properties:
                name:
                  type: string
                price:
                  type: integer
            example:
              name: "Paket Couple"
              price: 125000
      responses:
        201:
          description: success updating recipe's ingredient
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "succesfully update recipe's ingredient"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Id param:
                  value:
                    message: invalid id param
                Invalid Input:
                  value:
                    message: invalid input
                Record Not Found:
                  value:
                    message: record not found
                Foridden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error
    delete:
      tags:
        - Ingredients
      summary: delete recipe's ingredient
      description: feature for deleting recipe's ingredient
      security:
        - JWTAuth: []
      parameters:
        - name: recipe_id
          in: path
          description: ingredient of recipe's id to be deleted
          required: true
          schema:
            type: integer
            example: 1
        - name: ingredient_id
          in: path
          description: ingredient's id to be deleted
          required: true
          schema:
            type: integer
            example: 1
      responses:
        201:
          description: success deleting recipe's ingredient
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "succesfully delete recipe's ingredient"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Id param:
                  value:
                    message: invalid id param
                Record Not Found:
                  value:
                    message: record not found
                Foridden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                example:
                  message: internal server error

  ####################################
  #  INGREDIENTS DETAILS
  ####################################
  /recipes/{recipe_id}/ingredients/{ingredient_id}/ingredientDetails:
    post:
      tags:
        - Ingredient Details
      summary: insert new ingredient's detail
      description: feature for insert new ingredient's detail
      security:
        - JWTAuth: []
      parameters:
        - name: recipe_id
          in: path
          description: ingredient details of recipe's id of ingredient to be updated
          required: true
          schema:
            type: integer
            example: 1
        - name: ingredient_id
          in: path
          description: ingredient details of ingredient's id to be inserted
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - quantity
                - unit
              properties:
                name:
                  type: string
                quantity:
                  type: integer
                unit:
                  type: string
            example:
              name: "Gula Pasir"
              quantity: 100
              unit: "g"

      responses:
        201:
          description: success insert ingredient's detail
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  name: "Gula Pasir"
                  quantity: 100
                  unit: "g"
                message: "succesfully insert ingredient's detail"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Input:
                  value:
                    message: invalid input
                Invalid Ingredient:
                  value:
                    message: invalid ingredient
                Forbidden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

  /recipes/{recipe_id}/ingredients/ingredientDetails/{ingredient_detail_id}:
    put:
      tags:
        - Ingredient Details
      summary: update ingredient's detail
      description: feature for updating ingredient's detail
      security:
        - JWTAuth: []
      parameters:
        - name: recipe_id
          in: path
          description: ingredient details of recipe's id of ingredient to be updated
          required: true
          schema:
            type: integer
            example: 1
        - name: ingredient_detail_id
          in: path
          description: ingredient detail's id to be updated
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - quantity
                - unit
              properties:
                name:
                  type: string
                quantity:
                  type: integer
                unit:
                  type: string
            example:
              name: "Gula Aren"
              price: 50g
      responses:
        201:
          description: success updating ingredient's detail
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "succesfully update ingredient's detail"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Id param:
                  value:
                    message: invalid id param
                Invalid Input:
                  value:
                    message: invalid input
                Record Not Found:
                  value:
                    message: record not found
                Foridden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error
    delete:
      tags:
        - Ingredient Details
      summary: delete ingredient's detail
      description: feature for deleting ingredient's detail
      security:
        - JWTAuth: []
      parameters:
        - name: recipe_id
          in: path
          description: ingredient details of recipe's id of ingredient to be updated
          required: true
          schema:
            type: integer
            example: 1
        - name: ingredient_detail_id
          in: path
          description: ingredient detail's id to be deleted
          required: true
          schema:
            type: integer
            example: 1
      responses:
        201:
          description: success deleting ingredient's detail
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "succesfully delete ingredient's detail"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Id param:
                  value:
                    message: invalid id param
                Record Not Found:
                  value:
                    message: record not found
                Foridden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

  ####################################
  #  CARTS
  ####################################
  /users/carts:
    get:
      tags:
        - Carts
      summary: get list of user's carts
      description: feature for getting list of user's carts
      security:
        - JWTAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: limit data for each page
          schema:
            type: integer
            example: 2
      responses:
        200:
          description: success get list of user's carts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    data:
                      type: object
                    message:
                      type: string
              example:
                data:
                  [
                    {  
                      id: 55,
                      id_seller: 1,
                      seller_username: "admin",
                      recipe_images: [
                        {
                          id: 1,
                          url_image: "https://storage.googleapis.com/alta-cookit/static/images/kK8Fko0zU8GeOMMndYh680f1bSqi7r9aTUxHvlHotPVSkCGnG2.jpg"
                        }
                      ],
                      recipe_name: "Indomie Spesial",
                      ingredient_id: 1,
                      ingredient_name: "Original",
                      price: 10000,
                      quantity: 2
                    },
                  ]
                message: "succesfully read list of user's carts"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid page param:
                  value:
                    message: invalid page param
                Invalid limit param:
                  value:
                    message: invalid limit param
                
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error
    
    post:
      tags:
        - Carts
      summary: insert new user's cart
      description: feature for insert new user's cart
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ingredient_id
                - quantity
              properties:
                ingredient_id:
                  type: integer
                quantity:
                  type: integer
            example:
              ingredient_id: 1
              quantity: 2
      responses:
        201:
          description: success insert user's cart
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  {  
                    id: 55,
                    id_seller: 1,
                    seller_username: "admin",
                    recipe_images: [
                      {
                        id: 1,
                        url_image: "https://storage.googleapis.com/alta-cookit/static/images/kK8Fko0zU8GeOMMndYh680f1bSqi7r9aTUxHvlHotPVSkCGnG2.jpg"
                      }
                    ],
                    recipe_name: "Indomie Spesial",
                    ingredient_id: 1,
                    ingredient_name: "Original",
                    price: 10000,
                    quantity: 2
                  }
                message: "succesfully insert user's cart"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Input:
                  value:
                    message: invalid input
                Invalid Ingredient:
                  value:
                    message: invalid ingredient
                Forbidden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

  /users/carts/{cart_id}:
    put:
      tags:
        - Carts
      summary: update user's cart
      description: feature for updating user's cart
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - quantity
              properties:
                quantity:
                  type: string
            example:
              quantity: 1
      parameters:
        - name: cart_id
          in: path
          description: cart's id to be updated
          required: true
          schema:
            type: integer
            example: 1
      responses:
        201:
          description: success updating user's cart
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                message: "succesfully update user's cart"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Id param:
                  value:
                    message: invalid id param
                Invalid Input:
                  value:
                    message: invalid input
                Record Not Found:
                  value:
                    message: record not found
                Foridden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

    delete:
      tags:
        - Carts
      summary: delete user's cart
      description: feature for deleting user's cart
      security:
        - JWTAuth: []
      parameters:
        - name: cart_id
          in: path
          description: cart's id to be deleted
          required: true
          schema:
            type: integer
            example: 1
      responses:
        201:
          description: success deleting user's cart
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "succesfully delete user's cart"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Id param:
                  value:
                    message: invalid id param
                Record Not Found:
                  value:
                    message: record not found
                Foridden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

  ####################################
  #  Transactions
  ####################################
  /users/transactions:
    get:
      tags:
        - Transactions
      summary: get list of user's transactions
      description: feature for getting list of user's transactions
      security:
        - JWTAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            example: 1
        - name: limit
          in: query
          description: limit data for each page
          schema:
            type: integer
            example: 2
        - name: status
          in: query
          description: transaction's status filter
          schema:
            type: string
            enum:
              - Unpaid
              - Shipped
              - Received
              - Complete
      responses:
        200:
          description: success get list of user's transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    data:
                      type: object
                    message:
                      type: string
              example:
                data:
                  [
                    {
                      id: 1,
                      transaction_details: [
                        {
                          id: 1,
                          id_seller: 1,
                          seller_user_username: "admin",
                          recipe_name: "Indomie Spesial",
                          ingredient_name: "Original",
                          price: 25000,
                          quantity: 5
                        }
                      ],
                      customer_id: 1,
                      status: "Unpaid",
                      payment_method: "None",
                      shipping_fee: 9000,
                      shipping_method: "Shopee Food",
                      total_price: 25000,
                      created_at: "2023-03-31"
                    }
                  ]
                message: "succesfully read list of user's transactions"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid page param:
                  value:
                    message: invalid page param
                Invalid limit param:
                  value:
                    message: invalid limit param
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

    post:
      tags:
        - Transactions
      summary: insert new user's transaction
      description: "feature for insert new user's transaction (Payment Method : COD, BCA, BNI, BRI)"
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - ingredient_id
                  - quantity
                  - payment_method
                properties:
                  ingredient_id:
                    type: integer
                  quantity:
                    type: integer
                  payment_method:
                    type: string
                    enum:
                      - "COD"
                      - "BCA"
                      - "BNI"
                      - "BRI"
                      - "Mandiri"
                      - "Permata"
            example:
              {
                transaction_details:
                  [
                    {
                      ingredient_id: 1,
                      quantity: 5
                    },
                  ],
                payment_method: "BCA",
                shipping_fee: 9000,
                shipping_method: "Shopee Food",
              }
      responses:
        201:
          description: success insert user's transaction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  {
                    id: 1,
                    order_id: "fe931dce-c4e8-4033-858b-f2d890d70fbd",
                    virtual_account_number: "76364347481",
                    transaction_details: [
                      {
                        id: 1,
                        id_seller: 1,
                        seller_user_username: "admin",
                        recipe_name: "Indomie Spesial",
                        ingredient_name: "Original",
                        price: 25000,
                        quantity: 5
                      }
                    ],
                    customer_id: 1,
                    status: "Unpaid",
                    payment_method: "None",
                    shipping_fee: 9000,
                    shipping_method: "Shopee Food",
                    total_price: 25000,
                    created_at: "2023-03-31"
                  }
                message: "succesfully insert user's transaction"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Input:
                  value:
                    message: invalid input
                Invalid Ingredient:
                  value:
                    message: invalid ingredient
                Forbidden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

  /users/transactions/{transaction_id}/status:
    put:
      tags:
        - Transactions
      summary: update user's status transaction
      description: feature for update user's status transaction
      security:
        - JWTAuth: []
      parameters:
        - name: transaction_id
          description: user's transaction id to be updated
          required: true
          in: path
          schema:
            type: integer
            example: 1
      responses:
        201:
          description: success update user's status transaction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                message: "succesfully update user's status transaction"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Record Not Found:
                  value:
                    message: record not found
                Forbidden Request:
                  value:
                    message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

  ####################################
  #  Transaction Details
  ####################################
  /users/transactions/transaction_detail/{transaction_detail_id}:
    get:
      tags:
        - Transaction Details
      summary: get user's transaction detail
      description: feature for getting user's transaction detail
      security:
        - JWTAuth: []
      parameters:
        - name: transaction_detail_id
          required: true
          in: path
          description: transaction detail's of of user's transaction
          schema:
            type: integer
            example: 1
      responses:
        200:
          description: success get user's transaction detail
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    data:
                      type: object
                    message:
                      type: string
              example:
                data:
                  {
                    id: 1,
                    id_seller: 1,
                    seller_user_username: "admin",
                    recipe_name: "Indomie Spesial",
                    ingredient_name: "Original",
                    price: 25000,
                    quantity: 5
                  }
                message: "succesfully read user's transaction detail"
        400:
          description: "bad request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Invalid Id param:
                  value:
                    message: invalid id param
                Record Not Found:
                  value:
                    message: record not found
                Foridden Request:
                    value:
                      message: forbidden request
        500:
          description: "internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: internal server error

####################################
#  COMPONENTS
####################################
components:
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    responseObject:
      type: object
      properties:
        data:
          type: object
        message:
          type: string
  responses:
    400:
      description: "error from user"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
          example:
            message: "bad request"
    500:
      description: "error from server"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
          example:
            message: "internal server error"