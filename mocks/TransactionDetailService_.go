// Code generated by mockery v2.22.1. DO NOT EDIT.

package mocks

import (
	transaction_details "alta-cookit-be/features/transaction_details"

	mock "github.com/stretchr/testify/mock"
)

// TransactionDetailService_ is an autogenerated mock type for the TransactionDetailService_ type
type TransactionDetailService_ struct {
	mock.Mock
}

// SelectTransactionDetailById provides a mock function with given fields: transactionEntity
func (_m *TransactionDetailService_) SelectTransactionDetailById(transactionEntity *transaction_details.TransactionDetailEntity) (*transaction_details.TransactionDetailEntity, error) {
	ret := _m.Called(transactionEntity)

	var r0 *transaction_details.TransactionDetailEntity
	var r1 error
	if rf, ok := ret.Get(0).(func(*transaction_details.TransactionDetailEntity) (*transaction_details.TransactionDetailEntity, error)); ok {
		return rf(transactionEntity)
	}
	if rf, ok := ret.Get(0).(func(*transaction_details.TransactionDetailEntity) *transaction_details.TransactionDetailEntity); ok {
		r0 = rf(transactionEntity)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*transaction_details.TransactionDetailEntity)
		}
	}

	if rf, ok := ret.Get(1).(func(*transaction_details.TransactionDetailEntity) error); ok {
		r1 = rf(transactionEntity)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewTransactionDetailService_ interface {
	mock.TestingT
	Cleanup(func())
}

// NewTransactionDetailService_ creates a new instance of TransactionDetailService_. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTransactionDetailService_(t mockConstructorTestingTNewTransactionDetailService_) *TransactionDetailService_ {
	mock := &TransactionDetailService_{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
